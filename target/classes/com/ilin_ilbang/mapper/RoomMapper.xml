<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ilin_ilbang.mapper.RoomMapper">
	
	
	<!-- by 세은, 전체 목록 -->
	<select id="getListOfAll" resultType="HashMap">
		SELECT rownum, rcode, rtype, addr, rcmt, regdate, dep, mrent, yrent, elev, park, pet
		<![CDATA[
		FROM (
			SELECT @rownum:=@rownum+1 as rownum
				, i.rcode, i.rtype, i.addr, i.rcmt, i.regdate
				, p.dep, p.mrent, p.yrent, i.elev, i.park, i.pet
				FROM room_info i 
		        INNER JOIN (SELECT @rownum:=0) tmp
				INNER JOIN room_price p ON i.rcode=p.rcode
				INNER JOIN room_option o ON i.rcode=o.rcode
				order by i.regdate desc
			  ) as roomlist
		
			WHERE rownum > (#{pageNum} - 1) * #{amount}
			AND rownum <= #{pageNum} * #{amount}
		]]>
        
	</select>
	
	<!-- by 세은, 전체 목록 count -->
	<select id="getTotalCount" resultType="int">
		SELECT count(*) FROM room_info;
	</select>
	
	<!-- by 세은, 필터에 의한 목록 w. paging -->
	<select id="getListByFilter" resultType="HashMap" parameterType="HashMap">
		SELECT rownum, rcode, rtype, addr, rcmt, regdate, dep, mrent, yrent, elev, park, pet
		from (
			SELECT @rownum:=@rownum+1 as rownum
			       , i.rcode, i.rtype, i.addr, i.rcmt, i.regdate
			       , p.dep, p.mrent, p.yrent, i.elev, i.park, i.pet
			FROM room_info i
			INNER JOIN (SELECT @rownum:=0) tmp
			INNER JOIN room_price p ON i.rcode=p.rcode
			INNER JOIN room_option o ON i.rcode=o.rcode
			ORDER BY i.regdate desc
		       ) as roomlist		
		<where>	
			<![CDATA[rownum > (#{pageNum} - 1) * #{amount} AND rownum <= #{pageNum} * #{amount}]]>
			<!-- rtype -->
			<if test = "!(rtype.isEmpty())">
				<trim prefix = "AND (" suffix =")"> 
					rtype in
					<foreach collection="rtype" open="(" close=")" separator=", " item="item">
						#{item}
					</foreach>
				</trim> 
			</if>
			<!-- btype -->
			<if test = "!(btype.isEmpty())">
				<trim prefix = "AND (" suffix = ")">
					btype in
					<foreach collection="btype" open="(" close=")" separator=", " item="item">
						#{item}
					</foreach>
				</trim>
			</if>		
			<!-- dep -->
			<if test = "!(dep.isEmpty())">
				<trim prefix = "AND (" suffix = ")">
					<foreach collection="dep" open="(" close=")" separator="OR " item="item">
							<choose>
								<when test = "item == 'dep1'">
									<![CDATA[ dep <= 500 ]]>
								</when>
								<when test = "item == 'dep2'">
									<![CDATA[ dep >= 500 AND dep <= 1000 ]]>
								</when>
								<when test = "item == 'dep3'">
									<![CDATA[ dep >= 1000 ]]>
								</when>
							</choose>
					</foreach>
				</trim>
			</if>
			<!-- mrent -->
			<if test = "!(mrent.isEmpty())">
				<trim prefix = "AND (" suffix = ")">
					<foreach collection="mrent" open="(" close=")" separator="OR " item="item">
							<choose>
								<when test = "item == 'mrent1'">
									<![CDATA[ mrent <= 30 ]]>
								</when>
								<when test = "item == 'mrent2'">
									<![CDATA[ mrent >= 30 AND mrent < 60 ]]>
								</when>
								<when test = "item == 'mrent3'">
									<![CDATA[ mrent >= 60 ]]>
								</when>
							</choose>
					</foreach>
				</trim>
			</if>
			<!-- option -->
					<if test = "!(option.isEmpty())">
						<trim prefix = "AND (" suffix =")"> 
							<foreach collection="option" open="(" close=")" separator="AND " item="item">
								<choose>
									<when test = "item == 'elev'">
										elev = 'Y'
									</when>
									<when test = "item == 'park'">
										park = 'Y'
									</when>
									<when test = "item == 'pet'">
										pet = 'Y'
									</when>
								</choose>
							</foreach>
						</trim> 
					</if>
			</where>	
	</select>
		

	<!-- by 세은, 필터에 의한 목록 count -->
	<select id="getFilterListCount" resultType="int" parameterType="HashMap">
		SELECT count(*)
		FROM room_info i 
			 INNER JOIN room_price p USING (rcode)
			 INNER JOIN room_option o USING (rcode)
		<where>
		 	<trim prefix = "" prefixOverrides="AND"> 	
		 		<!-- rtype -->
				<if test = "!(rtype.isEmpty())">
					<trim prefix = "(" suffix =")"> 
						rtype in
						<foreach collection="rtype" open="(" close=")" separator=", " item="item">
							#{item}
						</foreach>
					</trim> 
				</if>
				
				<!-- btype -->
				<if test = "!(btype.isEmpty())">
					<trim prefix = "AND (" suffix = ")">
						btype in
						<foreach collection="btype" open="(" close=")" separator=", " item="item">
							#{item}
						</foreach>
					</trim>
				</if>
				
				<!-- dep -->
				
				<if test = "!(dep.isEmpty())">
					<trim prefix = "AND (" suffix = ")">
						<foreach collection="dep" open="(" close=")" separator="OR " item="item">
								<choose>
									<when test = "item == 'dep1'">
										<![CDATA[ dep < 500 ]]>
									</when>
									<when test = "item == 'dep2'">
										<![CDATA[ dep >= 500 AND dep < 1000 ]]>
									</when>
									<when test = "item == 'dep3'">
										<![CDATA[ dep > 1000 ]]>
									</when>
								</choose>
						</foreach>
					</trim>
				</if>
				
				<!-- mrent -->
				<if test = "!(mrent.isEmpty())">
					<trim prefix = "AND (" suffix = ")">
						<foreach collection="mrent" open="(" close=")" separator="OR " item="item">
								<choose>
									<when test = "item == 'mrent1'">
										<![CDATA[ mrent < 30 ]]>
									</when>
									<when test = "item == 'mrent2'">
										<![CDATA[ mrent >= 30 AND mrent < 60 ]]>
									</when>
									<when test = "item == 'mrent3'">
										<![CDATA[ mrent >= 60 ]]>
									</when>
								</choose>
						</foreach>
					</trim>
				</if>
				<!-- option -->
				<if test = "!(option.isEmpty())">
					<trim prefix = "AND (" suffix =")"> 
						<foreach collection="option" open="(" close=")" separator="AND " item="item">
							<choose>
								<when test = "item == 'elev'">
									elev = 'Y'
								</when>
								<when test = "item == 'park'">
									park = 'Y'
								</when>
								<when test = "item == 'pet'">
									pet = 'Y'
								</when>
							</choose>
						</foreach>
					</trim> 
				</if>
			</trim>
		</where>	
	</select>


	<!-- by 세은, 상세 페이지 정보 불러오기 -->
	<select id="readRoomInfo" resultType="HashMap" parameterType="String">
		SELECT i.rcode, i.rcont, i.addr, i.rtype, i.area, i.flr, i.mvdate, i.rface, i.park, i.elev, i.pet, i.btype,
		p.dep, p.dtype, p.mrent, p.yrent,
		o.ac, o.washer, o.fridge, o.tv, o.stove, o.microw, o.bed, o.desk, o.closet, o.shelf,
		a.uuid, a.uploadpath, a.fileName
		FROM room_info i INNER JOIN room_price p ON i.rcode = p.rcode INNER JOIN room_option o ON i.rcode = o.rcode INNER JOIN room_attach a ON i.rcode = a.rcode
		WHERE i.rcode = #{rcode}	
	</select>
	
	<!-- by영규, 방등록 페이지 room_info데이터 베이스에 추가 하기 -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="rcode" order="BEFORE" resultType="int">
			select max(rcode)+1 rcode from room_info
		</selectKey>
		INSERT INTO room_info(rcode ,btype, rtype, addr, addsub, area, whlarea, flr, myflr, elev, pet, park, mfee, rcmt, rcont, mvdate, rface)
		VALUES (#{rcode}, #{btype}, #{rtype}, #{addr}, #{addsub}, #{area}, #{whlarea}, #{flr}, #{myflr}, #{elev}, #{pet}, #{park}, #{mfee}, #{rcmt}, #{rcont}, #{mvdate}, #{rface})	
	</insert>
	
	<!-- by영규, 방등록 페이지 room_option데이터 베이스에 추가 하기 -->
	<insert id="insertOP">
		insert into room_option(ac, washer, fridge, tv, stove, microw, bed, desk, closet, shelf)
		values (#{ac}, #{washer}, #{fridge}, #{tv}, #{stove}, #{microw}, #{bed}, #{desk}, #{closet}, #{shelf})
	</insert>
	
	<!-- by영규, 방등록 페이지 room_price데이터 베이스에 추가 하기 -->
	<insert id="insertP">
		insert into room_price(dep, dtype, mrent, yrent, mfeec)
		values(#{dep}, #{dtype}, #{mrent}, #{yrent}, #{mfeec})
	</insert>
	
	<!-- by 세은, 방 수정페이지 열릴 때 기존 정보 출력하기 -->
	<select id="roomModifyLoad" resultType="HashMap" parameterType="int">
		SELECT i.rcode, i.btype, i.rtype, i.addr, i.addsub, i.area, i.whlarea, i.flr, i.myflr, i.rface
			   , i.mvdate, i.elev, i.park, i.pet, i.rcmt, i.rcont, i.regdate, i.updatedate
			   , p.dep, p.dtype, p.mrent, p.yrent, p.mcfee, p.agntid
			   , o.ac, o.washer, o.fridge, o.tv, o.stove, o.microw, o.bed, o.desk, o.closet, o.shelf
		FROM room_info i 
			 INNER JOIN room_price p ON i.rcode = p.rcode
			 INNER JOIN room_option o ON i.rcode = o.rcode
		WHERE i.rcode = #{rcode}
	</select>
	
	<!-- by 세은, 방 수정 동작 (room_info) -->
	<update id="ModifyRoomI" parameterType="com.ilin_ilbang.domain.room_infoVO">
		UPDATE room_info
		SET btype=#{btype}, rtype=#{rtype}, addr=#{addr}, addsub=#{addsub}
			,area=#{area}, whlarea=#{whlarea}, flr=#{flr}, myflr=#{myflr}, rface=#{rface}
			, mvdate=#{mvdate}, elev=#{elev}, park=#{park}, pet=#{pet}, rcmt=#{rcmt}, rcont=#{rcont}
		WHERE rcode=#{rcode}
	</update>
	
	<!-- by 세은, 방 수정 동작 (room_price) -->
	<update id="ModifyRoomP" parameterType="com.ilin_ilbang.domain.room_priceVO">
		UPDATE room_price
		SET dep=#{dep}, dtype=#{dtype}, mrent=#{mrent}, yrent=#{yrent}, mcfee=#{mcfee}
		WHERE rcode=#{rcode}
	</update>
	
	<!-- by 세은, 방 수정 동작 (room_option) -->
	<update id="ModifyRoomOP" parameterType="com.ilin_ilbang.domain.room_optionVO">
		UPDATE room_option
		SET ac=#{ac}, washer=#{washer}, fridge=#{fridge}, tv=#{tv}, stove=#{stove}, microw=#{microw}
			, bed=#{bed}, desk=#{desk}, closet=#{closet}, shelf=#{shelf}
		WHERE rcode=#{rcode}
	</update>
	
	<!-- by 세은, 좋아요 추가하기 -->
	<insert id="addLike">
		INSERT INTO member_like(mid, rcode) VALUES(#{mid}, #{rcode})
	</insert>
	
	<!-- by 세은, 유저가 이미 좋아요 한 방인지 확인 -->
	<select id="addLikeCount" resultType="int">
		SELECT COUNT(*) FROM member_like
		WHERE rcode = #{rcode} AND mid = #{mid}
	</select>
		
	<!-- by 세은, 좋아요 삭제 -->
	<delete id="dislike">
		DELETE FROM member_like
		WHERE mid = #{mid} AND
			  <trim prefix = "(" suffix =")"> 
			  		rcode in
					<foreach collection="rcode" open="(" close=")" separator=", " item="item">
						#{item}
					</foreach>
			  </trim> 
	</delete>
	
	<!-- by 세은, 좋아요 방 출력 w.paging -->
	<select id="userLikeList" resultType="HashMap" parameterType="HashMap">
		SELECT rownum, mid, rcode, rtype, addr, rcmt, regdate, dep, mrent, yrent, elev, park, pet
		from (
			SELECT @rownum:=@rownum+1 as rownum
			       , ml.rcode, ml.mid, i.rtype, i.addr, i.rcmt, i.regdate
			       , p.dep, p.mrent, p.yrent, i.elev, i.park, i.pet
			FROM member_like ml 
			INNER JOIN (SELECT @rownum:=0) tmp
			INNER JOIN room_info i ON ml.rcode=i.rcode
			INNER JOIN room_price p ON ml.rcode=p.rcode
			ORDER BY ml.addDate desc
		       ) as userLikeList	
		WHERE 
		<![CDATA[rownum > (#{pageNum} - 1) * #{amount} AND rownum <= #{pageNum} * #{amount}]]>
		AND mid = #{mid}
	</select>
	
	<!-- by 세은, 좋아요 방 카운트 -->
	<select id="userLikeCount" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM member_like WHERE mid = #{mid}
	</select>
	
	<!-- by 세은, 중개사가 등록한 방 출력 w.paging -->
	<select id="agntPostList" resultType="HashMap" parameterType="HashMap">
		SELECT rcode, regdate, updatedate, addr, addsub, rtype, btype, rcmt, onsale
			   , dtype, dep, mrent, yrent
			   , likecnt
		FROM (
				SELECT @rownum:=@rownum+1 as rownum
					   , i.rcode, i.regdate, i.updatedate, i.addr, i.addsub
					   , i.rtype, i.btype, i.rcmt, i.agntid, i.onsale
					   , p.dtype, p.dep, p.mrent, p.yrent
					   , (SELECT count(*) FROM member_like WHERE rcode = i.rcode) as likecnt	
				FROM room_info i
				INNER JOIN (SELECT @rownum:=0) tmp
			 	INNER JOIN room_price p ON i.rcode = p.rcode
			 ) as agntPostList
				WHERE
				<![CDATA[ rownum > (#{cri.pageNum} - 1) * #{cri.amount}
				AND rownum <= #{cri.pageNum} * #{cri.amount}]]>
			 	AND agntid = #{agntid}
	</select>
	
	<!-- by 세은, 중개사의 등록 정보 카운트 -->
	<select id="agntPostCnt" resultType="HashMap" parameterType="String">
		SELECT agntid
			   , (SELECT count(*) from room_info WHERE agntid=#{agntid}) as total
			   , (SELECT count(*) from room_info WHERE agntid=#{agntid} AND onsale='Y') as onSaleCnt
			   , (SELECT count(*) from room_info WHERE agntid=#{agntid} AND onsale='N') as soldCnt 
		FROM agent_info
		WHERE agntid = #{agntid}
	</select>
</mapper>